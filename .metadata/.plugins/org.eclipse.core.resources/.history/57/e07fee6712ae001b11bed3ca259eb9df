package com.kosta.sample1;

import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.xml.XmlBeanFactory;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;

public class TVUser {

	public static void main(String[] args) {
		test4();
	}
	
	private static void test4() {
		Resource resource = new ClassPathResource("sample1.xml");
		BeanFactory factory = new XmlBeanFactory(resource);
		TV tv = factory.getBean("lg", LgTV.class);
	}

	private static void test3() {
		TV tv = TVFactory.makeTV("LG");
		if(tv == null) return;
		tv.powerOn();
		tv.powerOff();
		
	}

	private static void test2() {
		// 변경사항이 생겼을 때 수정을 최소한으로 하기 위해서 인터페이스 사용
		// 사용자가 new --> 생성자가 바뀔 경우 에러.. ===> factory pattern
		TV tv = new LgTV("Acompany", "EEE");
		tv.powerOn();
		tv.powerOff();
	}

	private static void test1() {
		SamsungTV tv = new SamsungTV("DDD");
		tv.powerOn();
		tv.powerOff();
	}

}
